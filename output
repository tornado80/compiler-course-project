TOKEN: PROGRAM, LEXEME: 'PROGRAM', LINE NUMBER: 1
TOKEN: ID, LEXEME: 'compilerProjTest', ATTRIBUTE: compilerProjTest, LINE NUMBER: 1
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 1
TOKEN: VAR, LEXEME: 'var', LINE NUMBER: 2
TOKEN: ID, LEXEME: 'a_var', ATTRIBUTE: a_var, LINE NUMBER: 3
TOKEN: COMMA, LEXEME: ',', LINE NUMBER: 3
TOKEN: ID, LEXEME: 'b_var', ATTRIBUTE: b_var, LINE NUMBER: 3
TOKEN: COMMA, LEXEME: ',', LINE NUMBER: 3
TOKEN: ID, LEXEME: 'c_var', ATTRIBUTE: c_var, LINE NUMBER: 3
TOKEN: COMMA, LEXEME: ',', LINE NUMBER: 3
TOKEN: ID, LEXEME: 'i', ATTRIBUTE: i, LINE NUMBER: 3
TOKEN: COMMA, LEXEME: ',', LINE NUMBER: 3
TOKEN: ID, LEXEME: 'chosenOp', ATTRIBUTE: chosenOp, LINE NUMBER: 3
TOKEN: COLON, LEXEME: ':', LINE NUMBER: 3
TOKEN: INTEGER, LEXEME: 'integer', LINE NUMBER: 3
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 3
TOKEN: ID, LEXEME: 's', ATTRIBUTE: s, LINE NUMBER: 4
TOKEN: COLON, LEXEME: ':', LINE NUMBER: 4
TOKEN: REAL, LEXEME: 'real', LINE NUMBER: 4
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 4
TOKEN: PROCEDURE, LEXEME: 'procedure', LINE NUMBER: 9
TOKEN: ID, LEXEME: 'findMin', ATTRIBUTE: findMin, LINE NUMBER: 9
TOKEN: LEFT_PARENTHESIS, LEXEME: '(', LINE NUMBER: 9
TOKEN: ID, LEXEME: 'x', ATTRIBUTE: x, LINE NUMBER: 9
TOKEN: COMMA, LEXEME: ',', LINE NUMBER: 9
TOKEN: ID, LEXEME: 'y', ATTRIBUTE: y, LINE NUMBER: 9
TOKEN: COMMA, LEXEME: ',', LINE NUMBER: 9
TOKEN: ID, LEXEME: 'z', ATTRIBUTE: z, LINE NUMBER: 9
TOKEN: COLON, LEXEME: ':', LINE NUMBER: 9
TOKEN: INTEGER, LEXEME: 'integer', LINE NUMBER: 9
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 9
TOKEN: VAR, LEXEME: 'var', LINE NUMBER: 9
TOKEN: ID, LEXEME: 'm', ATTRIBUTE: m, LINE NUMBER: 9
TOKEN: COLON, LEXEME: ':', LINE NUMBER: 9
TOKEN: INTEGER, LEXEME: 'integer', LINE NUMBER: 9
TOKEN: RIGHT_PARENTHESIS, LEXEME: ')', LINE NUMBER: 9
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 9
TOKEN: BEGIN, LEXEME: 'begin', LINE NUMBER: 11
TOKEN: IF, LEXEME: 'if', LINE NUMBER: 12
TOKEN: ID, LEXEME: 'x', ATTRIBUTE: x, LINE NUMBER: 12
TOKEN: LESS_THAN, LEXEME: '<', LINE NUMBER: 12
TOKEN: ID, LEXEME: 'y', ATTRIBUTE: y, LINE NUMBER: 12
TOKEN: THEN, LEXEME: 'then', LINE NUMBER: 12
TOKEN: ID, LEXEME: 'm', ATTRIBUTE: m, LINE NUMBER: 13
TOKEN: ASSIGN, LEXEME: ':=', LINE NUMBER: 13
TOKEN: ID, LEXEME: 'x', ATTRIBUTE: x, LINE NUMBER: 13
TOKEN: ELSE, LEXEME: 'else', LINE NUMBER: 14
TOKEN: ID, LEXEME: 'm', ATTRIBUTE: m, LINE NUMBER: 15
TOKEN: ASSIGN, LEXEME: ':=', LINE NUMBER: 15
TOKEN: ID, LEXEME: 'y', ATTRIBUTE: y, LINE NUMBER: 15
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 15
TOKEN: IF, LEXEME: 'if', LINE NUMBER: 17
TOKEN: ID, LEXEME: 'z', ATTRIBUTE: z, LINE NUMBER: 17
TOKEN: LESS_THAN, LEXEME: '<', LINE NUMBER: 17
TOKEN: ID, LEXEME: 'm', ATTRIBUTE: m, LINE NUMBER: 17
TOKEN: THEN, LEXEME: 'then', LINE NUMBER: 17
TOKEN: ID, LEXEME: 'm', ATTRIBUTE: m, LINE NUMBER: 18
TOKEN: ASSIGN, LEXEME: ':=', LINE NUMBER: 18
TOKEN: ID, LEXEME: 'z', ATTRIBUTE: z, LINE NUMBER: 18
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 18
TOKEN: END, LEXEME: 'end', LINE NUMBER: 19
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 19
TOKEN: BEGIN, LEXEME: 'begin', LINE NUMBER: 21
TOKEN: IF, LEXEME: 'if', LINE NUMBER: 24
TOKEN: LEFT_PARENTHESIS, LEXEME: '(', LINE NUMBER: 24
TOKEN: ID, LEXEME: 'a_var', ATTRIBUTE: a_var, LINE NUMBER: 24
TOKEN: LESS_THAN_OR_EQUAL, LEXEME: '<=', LINE NUMBER: 24
TOKEN: INTEGER_CONSTANT, LEXEME: '0', ATTRIBUTE: 0, LINE NUMBER: 24
TOKEN: OR, LEXEME: 'or', LINE NUMBER: 24
TOKEN: ID, LEXEME: 'a_var', ATTRIBUTE: a_var, LINE NUMBER: 24
TOKEN: NOT_EQUAL, LEXEME: '<>', LINE NUMBER: 24
TOKEN: ID, LEXEME: 'b_var', ATTRIBUTE: b_var, LINE NUMBER: 24
TOKEN: RIGHT_PARENTHESIS, LEXEME: ')', LINE NUMBER: 24
TOKEN: THEN, LEXEME: 'then', LINE NUMBER: 24
TOKEN: ID, LEXEME: 'a_var', ATTRIBUTE: a_var, LINE NUMBER: 25
TOKEN: ASSIGN, LEXEME: ':=', LINE NUMBER: 25
TOKEN: INTEGER_CONSTANT, LEXEME: '2', ATTRIBUTE: 2, LINE NUMBER: 25
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 25
TOKEN: ELSE, LEXEME: 'else', LINE NUMBER: 26
TOKEN: ID, LEXEME: 's', ATTRIBUTE: s, LINE NUMBER: 27
TOKEN: ASSIGN, LEXEME: ':=', LINE NUMBER: 27
TOKEN: LEFT_PARENTHESIS, LEXEME: '(', LINE NUMBER: 27
TOKEN: INTEGER_CONSTANT, LEXEME: '4', ATTRIBUTE: 4, LINE NUMBER: 27
TOKEN: DIVIDE, LEXEME: '/', LINE NUMBER: 27
TOKEN: INTEGER_CONSTANT, LEXEME: '3', ATTRIBUTE: 3, LINE NUMBER: 27
TOKEN: RIGHT_PARENTHESIS, LEXEME: ')', LINE NUMBER: 27
TOKEN: TIMES, LEXEME: '*', LINE NUMBER: 27
TOKEN: ID, LEXEME: 'a_var', ATTRIBUTE: a_var, LINE NUMBER: 27
TOKEN: TIMES, LEXEME: '*', LINE NUMBER: 27
TOKEN: ID, LEXEME: 'a_var', ATTRIBUTE: a_var, LINE NUMBER: 27
TOKEN: TIMES, LEXEME: '*', LINE NUMBER: 27
TOKEN: ID, LEXEME: 'a_var', ATTRIBUTE: a_var, LINE NUMBER: 27
TOKEN: TIMES, LEXEME: '*', LINE NUMBER: 27
TOKEN: LEFT_PARENTHESIS, LEXEME: '(', LINE NUMBER: 27
TOKEN: INTEGER_CONSTANT, LEXEME: '7', ATTRIBUTE: 7, LINE NUMBER: 27
TOKEN: DIV, LEXEME: 'div', LINE NUMBER: 27
TOKEN: INTEGER_CONSTANT, LEXEME: '2', ATTRIBUTE: 2, LINE NUMBER: 27
TOKEN: RIGHT_PARENTHESIS, LEXEME: ')', LINE NUMBER: 27
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 27
TOKEN: WHILE, LEXEME: 'while', LINE NUMBER: 30
TOKEN: ID, LEXEME: 'b_var', ATTRIBUTE: b_var, LINE NUMBER: 30
TOKEN: GREATER_THAN, LEXEME: '>', LINE NUMBER: 30
TOKEN: INTEGER_CONSTANT, LEXEME: '10', ATTRIBUTE: 10, LINE NUMBER: 30
TOKEN: DO, LEXEME: 'do', LINE NUMBER: 30
TOKEN: BEGIN, LEXEME: 'begin', LINE NUMBER: 31
TOKEN: ID, LEXEME: 'findMin', ATTRIBUTE: findMin, LINE NUMBER: 32
TOKEN: LEFT_PARENTHESIS, LEXEME: '(', LINE NUMBER: 32
TOKEN: ID, LEXEME: 'a_var', ATTRIBUTE: a_var, LINE NUMBER: 32
TOKEN: COMMA, LEXEME: ',', LINE NUMBER: 32
TOKEN: ID, LEXEME: 'b_var', ATTRIBUTE: b_var, LINE NUMBER: 32
TOKEN: COMMA, LEXEME: ',', LINE NUMBER: 32
TOKEN: ID, LEXEME: 'c_var', ATTRIBUTE: c_var, LINE NUMBER: 32
TOKEN: COMMA, LEXEME: ',', LINE NUMBER: 32
TOKEN: ID, LEXEME: 's', ATTRIBUTE: s, LINE NUMBER: 32
TOKEN: RIGHT_PARENTHESIS, LEXEME: ')', LINE NUMBER: 32
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 32
TOKEN: ID, LEXEME: 'b_var', ATTRIBUTE: b_var, LINE NUMBER: 33
TOKEN: ASSIGN, LEXEME: ':=', LINE NUMBER: 33
TOKEN: ID, LEXEME: 'b_var', ATTRIBUTE: b_var, LINE NUMBER: 33
TOKEN: MINUS, LEXEME: '-', LINE NUMBER: 33
TOKEN: INTEGER_CONSTANT, LEXEME: '2', ATTRIBUTE: 2, LINE NUMBER: 33
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 33
TOKEN: ID, LEXEME: 'c_var', ATTRIBUTE: c_var, LINE NUMBER: 34
TOKEN: ASSIGN, LEXEME: ':=', LINE NUMBER: 34
TOKEN: NOT, LEXEME: 'not', LINE NUMBER: 34
TOKEN: ID, LEXEME: 'c_var', ATTRIBUTE: c_var, LINE NUMBER: 34
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 34
TOKEN: END, LEXEME: 'end', LINE NUMBER: 35
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 35
TOKEN: ID, LEXEME: 's', ATTRIBUTE: s, LINE NUMBER: 37
TOKEN: ASSIGN, LEXEME: ':=', LINE NUMBER: 37
TOKEN: ID, LEXEME: 's', ATTRIBUTE: s, LINE NUMBER: 37
TOKEN: MOD, LEXEME: 'mod', LINE NUMBER: 37
TOKEN: INTEGER_CONSTANT, LEXEME: '5', ATTRIBUTE: 5, LINE NUMBER: 37
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 37
TOKEN: IF, LEXEME: 'if', LINE NUMBER: 38
TOKEN: LEFT_PARENTHESIS, LEXEME: '(', LINE NUMBER: 38
TOKEN: ID, LEXEME: 's', ATTRIBUTE: s, LINE NUMBER: 38
TOKEN: GREATER_THAN, LEXEME: '>', LINE NUMBER: 38
TOKEN: INTEGER_CONSTANT, LEXEME: '2', ATTRIBUTE: 2, LINE NUMBER: 38
TOKEN: AND, LEXEME: 'and', LINE NUMBER: 38
TOKEN: ID, LEXEME: 's', ATTRIBUTE: s, LINE NUMBER: 38
TOKEN: LESS_THAN, LEXEME: '<', LINE NUMBER: 38
TOKEN: INTEGER_CONSTANT, LEXEME: '4', ATTRIBUTE: 4, LINE NUMBER: 38
TOKEN: RIGHT_PARENTHESIS, LEXEME: ')', LINE NUMBER: 38
TOKEN: THEN, LEXEME: 'then', LINE NUMBER: 38
TOKEN: ID, LEXEME: 'a_var', ATTRIBUTE: a_var, LINE NUMBER: 39
TOKEN: ASSIGN, LEXEME: ':=', LINE NUMBER: 39
TOKEN: REAL_CONSTANT, LEXEME: '-005', ATTRIBUTE: -5.0, LINE NUMBER: 39
TOKEN: SEMICOLON, LEXEME: ';', LINE NUMBER: 39
TOKEN: END, LEXEME: 'end', LINE NUMBER: 41
