SymbolTable(header: Token(type: ID, lexeme: 'compilerProjTest', attribute: None, lineno: 1))
	entry: a_var -> Entry(token: Token(type: ID, lexeme: 'a_var', attribute: None, lineno: 3), offset: 0, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: b_var -> Entry(token: Token(type: ID, lexeme: 'b_var', attribute: None, lineno: 3), offset: 4, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: c_var -> Entry(token: Token(type: ID, lexeme: 'c_var', attribute: None, lineno: 3), offset: 8, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: i -> Entry(token: Token(type: ID, lexeme: 'i', attribute: None, lineno: 3), offset: 12, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: chosenOp -> Entry(token: Token(type: ID, lexeme: 'chosenOp', attribute: None, lineno: 3), offset: 16, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: s -> Entry(token: Token(type: ID, lexeme: 's', attribute: None, lineno: 4), offset: 20, width: 8, data_type: DataType.REAL, entry_type: EntryType.DECLARATION)
	procedure: findMin -> 
		SymbolTable(header: Token(type: ID, lexeme: 'findMin', attribute: None, lineno: 9))
			entry: x -> Entry(token: Token(type: ID, lexeme: 'x', attribute: None, lineno: 9), offset: 0, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.PARAMETER)
			entry: y -> Entry(token: Token(type: ID, lexeme: 'y', attribute: None, lineno: 9), offset: 4, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.PARAMETER)
			entry: z -> Entry(token: Token(type: ID, lexeme: 'z', attribute: None, lineno: 9), offset: 8, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.PARAMETER)
			entry: m -> Entry(token: Token(type: ID, lexeme: 'm', attribute: None, lineno: 9), offset: 12, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.PARAMETER)
			entry: r -> Entry(token: Token(type: ID, lexeme: 'r', attribute: None, lineno: 9), offset: 16, width: 8, data_type: DataType.REAL, entry_type: EntryType.PARAMETER)
			entry: s -> Entry(token: Token(type: ID, lexeme: 's', attribute: None, lineno: 9), offset: 24, width: 8, data_type: DataType.REAL, entry_type: EntryType.PARAMETER)