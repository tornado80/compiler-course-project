SymbolTable(header: Token(type: ID, lexeme: 'compilerProjTest', attribute: None, lineno: 1)):
	entry: a_var -> Entry(token: Token(type: ID, lexeme: 'a_var', attribute: None, lineno: 3), offset: 0, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: b_var -> Entry(token: Token(type: ID, lexeme: 'b_var', attribute: None, lineno: 3), offset: 4, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: c_var -> Entry(token: Token(type: ID, lexeme: 'c_var', attribute: None, lineno: 3), offset: 8, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: i -> Entry(token: Token(type: ID, lexeme: 'i', attribute: None, lineno: 3), offset: 12, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: chosenOp -> Entry(token: Token(type: ID, lexeme: 'chosenOp', attribute: None, lineno: 3), offset: 16, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: b -> Entry(token: Token(type: ID, lexeme: 'b', attribute: None, lineno: 3), offset: 20, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: g -> Entry(token: Token(type: ID, lexeme: 'g', attribute: None, lineno: 3), offset: 24, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: h -> Entry(token: Token(type: ID, lexeme: 'h', attribute: None, lineno: 3), offset: 28, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: d -> Entry(token: Token(type: ID, lexeme: 'd', attribute: None, lineno: 3), offset: 32, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)
	entry: s -> Entry(token: Token(type: ID, lexeme: 's', attribute: None, lineno: 4), offset: 36, width: 8, data_type: DataType.REAL, entry_type: EntryType.DECLARATION)
	entry: c -> Entry(token: Token(type: ID, lexeme: 'c', attribute: None, lineno: 4), offset: 44, width: 8, data_type: DataType.REAL, entry_type: EntryType.DECLARATION)
	entry: 4 -> Entry(token: Token(type: INTEGER_CONSTANT, lexeme: '4', attribute: 4, lineno: 27), offset: 52, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.CONSTANT)
	entry: (1/INTEGER) -> Entry(token: Token(type: ID, lexeme: '(1/INTEGER)', attribute: None, lineno: 0), offset: 56, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.TEMPORARY)
	entry: 2 -> Entry(token: Token(type: INTEGER_CONSTANT, lexeme: '2', attribute: 2, lineno: 27), offset: 60, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.CONSTANT)
	entry: 3 -> Entry(token: Token(type: INTEGER_CONSTANT, lexeme: '3', attribute: 3, lineno: 29), offset: 64, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.CONSTANT)
	entry: 10 -> Entry(token: Token(type: INTEGER_CONSTANT, lexeme: '10', attribute: 10, lineno: 43), offset: 68, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.CONSTANT)
	entry: 5 -> Entry(token: Token(type: INTEGER_CONSTANT, lexeme: '5', attribute: 5, lineno: 49), offset: 72, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.CONSTANT)
	entry: (1/REAL) -> Entry(token: Token(type: ID, lexeme: '(1/REAL)', attribute: None, lineno: 0), offset: 76, width: 8, data_type: DataType.REAL, entry_type: EntryType.TEMPORARY)
	entry: 646 -> Entry(token: Token(type: INTEGER_CONSTANT, lexeme: '646', attribute: 646, lineno: 52), offset: 84, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.CONSTANT)
	entry: 0.00000 -> Entry(token: Token(type: REAL_CONSTANT, lexeme: '0.00000', attribute: 0.0, lineno: 53), offset: 88, width: 8, data_type: DataType.REAL, entry_type: EntryType.CONSTANT)
	procedure: findMin -> 
		SymbolTable(header: Token(type: ID, lexeme: 'findMin', attribute: None, lineno: 9)):
			entry: x -> Entry(token: Token(type: ID, lexeme: 'x', attribute: None, lineno: 9), offset: 0, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.PARAMETER)
			entry: y -> Entry(token: Token(type: ID, lexeme: 'y', attribute: None, lineno: 9), offset: 4, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.PARAMETER)
			entry: z -> Entry(token: Token(type: ID, lexeme: 'z', attribute: None, lineno: 9), offset: 8, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.PARAMETER)
			entry: m -> Entry(token: Token(type: ID, lexeme: 'm', attribute: None, lineno: 9), offset: 12, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.PARAMETER)
			entry: r -> Entry(token: Token(type: ID, lexeme: 'r', attribute: None, lineno: 9), offset: 16, width: 8, data_type: DataType.REAL, entry_type: EntryType.PARAMETER)
			entry: s -> Entry(token: Token(type: ID, lexeme: 's', attribute: None, lineno: 9), offset: 24, width: 8, data_type: DataType.REAL, entry_type: EntryType.PARAMETER)
			entry: l -> Entry(token: Token(type: ID, lexeme: 'l', attribute: None, lineno: 10), offset: 32, width: 4, data_type: DataType.INTEGER, entry_type: EntryType.DECLARATION)